Build instructions
==================

Compiling TortoiseGit is not very difficult, but it requires several steps
to finish, at least the first time.

Unlike other big open source projects, once you have built all the libraries
TortoiseGit depends on, you can use the familiar Visual Studio IDE to build
and debug the binaries. No need to run the build script for every little change.

So don't give up if you read through the next section and all the requirements.
You only have to do this once.

Requirements
------------

First, you need to install the compiler package:

*  You need at least Visual Studio 2013 for
   building the full TortoiseGit package.
   The TortoiseGit teams uses VS2013 Professional Update 5.
   Make sure the "Microsoft Foundation Classes for C++" are installed.
   This is the recommended option, but it is not free :-(

   If you do not have access to VS Professional you can download the free
   Visual Studio Community 2013 Edition (https://www.visualstudio.com/en-us/news/vs2013-community-vs).
   This version also allows to fully build the TortoiseGit package if
   "Microsoft Foundation Classes for C++" are selected.

Next you might need to install some utilities/programs:
*  If you want to build the MSI installer you need WiX3.9 (http://wix.codeplex.com/)
*  For building the docs you need NAnt (http://nant.sourceforge.net/) and
   https://sourceforge.net/projects/tortoisesvn/files/build%20tools/
   See doc/readme.txt for more details on building the docs.
*  If you want to execute the unit tests from within VisualStudio the GoogleTestAdaper is recommended
   (https://github.com/csoltenborn/GoogleTestAdapter/releases)

Get external source code
------------------------

TortoiseGit comes with all required code in its repository included or linked as submodules:

Run

    git submodule update --init

to download all linked repositories (submodules) automatically.
Alternatively, you can download submodules when cloning the main project with single command.

    git clone --recursive https://gitlab.com/tortoisegit/tortoisegit.git

Building the packages
---------------------

Open TortoiseGit.sln in Visual Studio.
Build all projects.

You can also build TortoiseGit via command line by calling MSBuild 4.0.
Open Developer Command Prompt for VS2013

    MSBuild TortoiseGit.sln /p:Configuration=Release;Platform=Win32
    MSBuild TortoiseGit.sln /p:Configuration=Release;Platform=x64

If you want to build the installer package, make sure you build the Win32 configuration before the x64 one
Also, build the docs before the installer packages (or copy existing TortoiseGit_en.chm and TortoiseMerge_en.chm files into the doc/output folder).
